{"version":3,"file":"index.js","sourceRoot":"/","sources":["index.ts"],"names":[],"mappings":"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","sourcesContent":["import express from 'express'\nimport http from 'http'\nimport { Server } from 'socket.io'\nimport SocketsEvents from './utils/socket-events'\nimport cors from 'cors'\nimport dotenv from 'dotenv'\ndotenv.config()\n\nconst app = express()\nconst server = http.createServer(app)\n\napp.use(cors())\napp.use(express.json())\n\nconst PORT = process.env.PORT || 3000\nconst io = new Server(server, {\n  cors: {\n    origin: '*', // TODO: restrict in production\n    methods: ['GET', 'POST'],\n  },\n})\napp.get('/', (req, res) => {\n  res.send('Welcome to the Call App Backend!')\n})\n\nio.on('connection', (socket) => {\n  // Handle chat messages\n  socket.on(SocketsEvents.CHAT_MESSAGE, (msg: string) => {\n    if (typeof msg !== 'string' || !msg.trim()) {\n      socket.emit('error', { error: 'Invalid chat message' })\n      return\n    }\n    io.emit('chat message', msg)\n  })\n\n  // Handle user joining\n  socket.on(SocketsEvents.CALL_REQUEST, (data: any) => {\n    if (!data || typeof data.to !== 'string' || !data.offer) {\n      socket.emit('error', { error: 'Invalid call request' })\n      return\n    }\n    console.log(`User ${data.to} has requested a call`)\n    io.to(data.to).emit(SocketsEvents.CALL_REQUEST, {\n      from: socket.id,\n      offer: data.offer,\n    })\n  })\n\n  // Handle user accepting a call\n  socket.on(SocketsEvents.CALL_ACCEPT, (data: any) => {\n    if (!data || typeof data.to !== 'string' || !data.offer) {\n      socket.emit('error', { error: 'Invalid call accept' })\n      return\n    }\n    console.log(`User ${data.to} has accepted the call`)\n    io.to(data.to).emit(SocketsEvents.CALL_ACCEPT, {\n      from: socket.id,\n      offer: data.offer,\n    })\n  })\n\n  // Handle user disconnecting\n  socket.on('disconnect', () => {\n    console.log('user disconnected')\n  })\n})\n\nserver.listen(PORT, () => {\n  console.log(`Server is running on http://localhost:${PORT}`)\n})\n\n// Graceful shutdown\nprocess.on('SIGTERM', () => {\n  console.log('SIGTERM signal received: closing HTTP server')\n  server.close(() => {\n    console.log('HTTP server closed')\n  })\n})\n"]}